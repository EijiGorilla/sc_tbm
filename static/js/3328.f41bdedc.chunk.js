"use strict";(self.webpackChunksc_tbm=self.webpackChunksc_tbm||[]).push([[3328],{10947:(e,t,n)=>{n.d(t,{a:()=>f,b:()=>d,n:()=>u,s:()=>i,t:()=>o});n(81806);var r=n(76460);function f(e,t,n){o(e.typedBuffer,t.typedBuffer,n,e.typedBufferStride,t.typedBufferStride)}function o(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:r;if(e.length/r!=t.length/f)return;const o=e.length/r,u=n[0],i=n[1],d=n[2],l=n[3],c=n[4],s=n[5],a=n[6],p=n[7],h=n[8];let y=0,g=0;for(let B=0;B<o;B++){const n=t[y],o=t[y+1],B=t[y+2],m=t[y+3];e[g]=u*n+l*o+a*B,e[g+1]=i*n+c*o+p*B,e[g+2]=d*n+s*o+h*B,e[g+3]=m,y+=f,g+=r}}function u(e,t){const n=Math.min(e.count,t.count),r=e.typedBuffer,f=e.typedBufferStride,o=t.typedBuffer,u=t.typedBufferStride;for(let i=0;i<n;i++){const e=i*f,t=i*u,n=o[t],d=o[t+1],l=o[t+2],c=n*n+d*d+l*l;if(c>0){const t=1/Math.sqrt(c);r[e]=t*n,r[e+1]=t*d,r[e+2]=t*l}}}function i(e,t,n){d(e.typedBuffer,t,n,e.typedBufferStride)}function d(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4;const f=Math.min(e.length/r,t.count),o=t.typedBuffer,u=t.typedBufferStride;let i=0,d=0;for(let l=0;l<f;l++)e[d]=n*o[i],e[d+1]=n*o[i+1],e[d+2]=n*o[i+2],e[d+3]=n*o[i+3],i+=u,d+=r}Object.freeze(Object.defineProperty({__proto__:null,normalize:u,scale:d,scaleView:i,transformMat3:o,transformMat3View:f,transformMat4:function(e,t,n){let f=arguments.length>3&&void 0!==arguments[3]?arguments[3]:4,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:f;if(e.length/f!=t.length/o)return void r.A.getLogger("esri.views.3d.support.buffer.math").error("source and destination buffers need to have the same number of elements");const u=e.length/f,i=n[0],d=n[1],l=n[2],c=n[3],s=n[4],a=n[5],p=n[6],h=n[7],y=n[8],g=n[9],B=n[10],m=n[11],b=n[12],v=n[13],S=n[14],M=n[15];let w=0,_=0;for(let r=0;r<u;r++){const n=t[w],r=t[w+1],u=t[w+2],k=t[w+3];e[_]=i*n+s*r+y*u+b*k,e[_+1]=d*n+a*r+g*u+v*k,e[_+2]=l*n+p*r+B*u+S*k,e[_+3]=c*n+h*r+m*u+M*k,w+=o,_+=f}},transformMat4View:function(e,t,n){if(e.count!==t.count)return;const r=e.count,f=n[0],o=n[1],u=n[2],i=n[3],d=n[4],l=n[5],c=n[6],s=n[7],a=n[8],p=n[9],h=n[10],y=n[11],g=n[12],B=n[13],m=n[14],b=n[15],v=e.typedBuffer,S=e.typedBufferStride,M=t.typedBuffer,w=t.typedBufferStride;for(let _=0;_<r;_++){const e=_*S,t=_*w,n=M[t],r=M[t+1],k=M[t+2],V=M[t+3];v[e]=f*n+d*r+a*k+g*V,v[e+1]=o*n+l*r+p*k+B*V,v[e+2]=u*n+c*r+h*k+m*V,v[e+3]=i*n+s*r+y*k+b*V}}},Symbol.toStringTag,{value:"Module"}))}}]);
//# sourceMappingURL=3328.f41bdedc.chunk.js.map